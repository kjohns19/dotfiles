#!/bin/bash

# Funtions to time the last command
__get_time() {
    # %-N removes *trailing* zeroes, not leading ones, so use sed to remove them
    date +'%-s %N' | sed 's/ 0\+/ /g'
}
__set_command_start() {
    [ -z "$_command_start" ] && _command_start=$(__get_time)
}
__format_time() {
    local -i h=$(($1/3600))
    local -i m=$((($1/60)%60))
    local -i s=$(($1%60))
    local -i ms=$2;
    if   [ $h -gt 0 ]; then printf '%uh%02um%02u.%03us' $h $m $s $ms
    elif [ $m -gt 0 ]; then printf '%um%02u.%03us' $m $s $ms
    else                    printf '%u.%03us' $s $ms
    fi
}
__calc_elapsed_time() {
    local -i begin_s
    local -i begin_ns
    local -i end_s
    local -i end_ns
    read begin_s begin_ns <<< "$_command_start"
    begin_ns=${begin_ns##+(0)}
    read end_s end_ns <<< $(__get_time)
    end_ns=${end_ns##+(0)}
    local -i s=$((end_s - begin_s))
    local -i ms
    if [ $end_ns -ge $begin_ns ]; then
        ms=$(((end_ns - begin_ns) / 1000000))
    else
        s=$((s-1))
        ms=$(((1000000000 + end_ns - begin_ns) / 1000000))
    fi
    __format_time $s $ms
}

# PS1 setup
set_ps1() {
    local EXIT=$?
    local TIME=$(__calc_elapsed_time)
    local DATE=$(date +"%H:%M:%S")
    local JOBS=$(jobs -rp | wc -l)
    local BRANCH=$(git rev-parse --abbrev-ref HEAD 2> /dev/null)
    local USER=$(whoami)
    local HOST=$(hostname)
    local CWD=$(dirs +0)  # dirs uses ~ for home directory unlike pwd

    # Colors
    local RED="\033[0;31m"
    local BLUE="\033[1;34m"
    local GREEN="\033[0;32m"
    local LIGHTRED="\033[1;31m"
    local PURPLE="\033[0;95m"
    local YELLOW="\033[1;33m"
    local NONE="\033[0m"

    # Start on new line
    local PROMPTFMT="\n"
    local PROMPTARGS=()

    # Time of last command
    PROMPTFMT+="$PURPLE%s $LIGHTRED%s "
    PROMPTARGS+=("$DATE" "$TIME")

    # user@host workingdir
    PROMPTFMT+="$BLUE%s@%s $GREEN%s"
    PROMPTARGS+=("$USER" "$HOST" "$CWD")

    # Current git branch
    if [[ -n "$BRANCH" ]]; then
        PROMPTFMT+=" $LIGHTRED(%s)"
        PROMPTARGS+=("$BRANCH")
    fi

    # Show python virtual environment
    if [[ -n "$VIRTUAL_ENV" ]]; then
        PROMPTFMT+=" $PURPLE%s"
        PROMPTARGS+=("${VIRTUAL_ENV/#$HOME/'~'}")
    fi

    # Show number of jobs if > 0
    if [[ "$JOBS" -gt 0 ]]; then
        PROMPTFMT+=" $YELLOW%s"
        PROMPTARGS+=("$JOBS")
    fi

    # Show exit status of last command if != 0
    if [[ "$EXIT" -ne 0 ]]; then
        PROMPTFMT+=" $RED%s"
        PROMPTARGS+=("$EXIT")
    fi

    PROMPTFMT+="\n$NONE"

    printf "$PROMPTFMT" "${PROMPTARGS[@]}"

    # Prompt: a yellow arrow
    PS1="\[$YELLOW\]⇒ \[$NONE\]"
    PS2="\[$YELLOW\]↳ \[$NONE\]"
    _command_start=
}
__set_command_start
trap __set_command_start DEBUG
PROMPT_COMMAND="set_ps1; $PROMPT_COMMAND"
