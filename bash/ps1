#!/bin/bash

# Funtions to time the last command
__set_command_start() {
    [ -z "$_command_start" ] && _command_start=$(date +"%-s %-N")
}
__format_time() {
    local -i h=$(($1/3600))
    local -i m=$((($1/60)%60))
    local -i s=$(($1%60))
    local -i ms=$2;
    if   [ $h -gt 0 ]; then printf '%uh%02um%02u.%03us' $h $m $s $ms
    elif [ $m -gt 0 ]; then printf '%um%02u.%03us' $m $s $ms
    else                    printf '%u.%03us' $s $ms
    fi
}
__calc_elapsed_time() {
    local -i begin_s
    local -i begin_ns
    local -i end_s
    local -i end_ns
    read begin_s begin_ns <<< "$_command_start"
    begin_ns=${begin_ns##+(0)}
    read end_s end_ns <<< $(date +"%-s %-N")
    end_ns=${end_ns##+(0)}
    local -i s=$((end_s - begin_s))
    local -i ms
    if [ $end_ns -ge $begin_ns ]; then
        ms=$(((end_ns - begin_ns) / 1000000))
    else
        s=$((s-1))
        ms=$(((1000000000 + end_ns - begin_ns) / 1000000))
    fi
    __format_time $s $ms
}

# PS1 setup
set_ps1() {
    local EXIT=$?
    local TIME=$(__calc_elapsed_time)
    local DATE=$(date +"%H:%M:%S")
    local JOBS=$(jobs -rp | wc -l)
    local BRANCH=$(git rev-parse --abbrev-ref HEAD 2> /dev/null)

    # Colors
    local RED="\[\033[0;31m\]"
    local BLUE="\[\033[1;34m\]"
    local GREEN="\[\033[0;32m\]"
    local LIGHTRED="\[\033[1;31m\]"
    local PURPLE="\[\033[0;95m\]"
    local YELLOW="\[\033[1;33m\]"
    local NONE="\[\033[0m\]"

    # Start on new line
    PS1="\n"

    # Time of last command
    PS1+="$PURPLE$DATE $LIGHTRED$TIME "

    # user@host workingdir
    PS1+="$BLUE\u@\h $GREEN\w"

    # Current git branch
    [ -n "$BRANCH" ] && PS1+=" $LIGHTRED($BRANCH)"

    # Show number of jobs if > 0
    [ $JOBS -gt 0 ] && PS1+=" $YELLOW$JOBS"

    # Show exit status of last command if != 0
    [ $EXIT != 0 ] && PS1+=" $RED$EXIT"

    PS1+="\n"

    # Prompt: a yellow arrow
    PS1+="$YELLOW⇒ $NONE"
    PS2="$YELLOW↳ $NONE"
    _command_start=
}
__set_command_start
trap __set_command_start DEBUG
PROMPT_COMMAND="set_ps1; $PROMPT_COMMAND"
